{
  "version": 3,
  "sources": ["src/app/harmonia-universalis/harmonia-universalis.component.ts", "src/app/harmonia-universalis/harmonia-universalis.component.html"],
  "sourcesContent": ["import { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { AfterViewInit, Component, OnInit, ChangeDetectionStrategy, ViewChild, inject } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Injectable } from '@angular/core';\r\nimport { SetDataService } from '../services/set-data.service';\r\nimport { ArrayToCsvService} from '../services/array-to-csv.service';\r\nimport { HuDatabaseService } from './services/hu-database.service';\r\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatSort, Sort, MatSortModule } from '@angular/material/sort';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { RouterModule } from '@angular/router';\r\nimport { Observable, BehaviorSubject, combineLatest } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { FormControl, ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule} from '@angular/material/form-field';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { PageEvent, MatPaginatorModule } from '@angular/material/paginator';\r\nimport { SelectedLangService } from '../selected-lang.service';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\n\r\nexport interface HU {\r\n  author:{ label:string, id:string };\r\n  title:{ label:string, id:string  };\r\n  location:{ label:string, id:string };\r\n  date:{ value:string };\r\n}\r\n\r\nconst columnMapping = {\r\n  author: (data) => data.author?.label,\r\n  title: (data) => data.title?.label,\r\n  location: (data) => data.location?.label,\r\n  date: (data) => data.date?.value,\r\n};\r\n\r\n\r\n@Component({\r\n  selector: 'app-harmonia-universalis',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    RouterModule,\r\n    MatPaginatorModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatSlideToggleModule,\r\n    MatProgressSpinnerModule,\r\n    MatTooltipModule\r\n  ],\r\n  templateUrl: './harmonia-universalis.component.html',\r\n  styleUrl: './harmonia-universalis.component.scss',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\nexport class HarmoniaUniversalisComponent implements OnInit {\r\n  private database = inject(HuDatabaseService);\r\n  private _liveAnnouncer = inject(LiveAnnouncer);\r\n  private csv = inject(ArrayToCsvService);\r\n  private lang = inject(SelectedLangService);\r\n\r\n  public readonly displayedColumns:string[] = ['author','title','location','date'];\r\n\r\n  dataSource: MatTableDataSource<HU> = new MatTableDataSource;\r\n  dataSource$: Observable<any>;\r\n\r\n  filtered;\r\n\r\n  isMobile = window.innerWidth <= 600;\r\n\r\n\r\n  biblioHU:string = \"Bibliography Harmonia Universalis\";\r\n\r\n  authorHeader:string =\"Author\";\r\n  titleHeader:string = \"Title\";\r\n  locationHeader:string =\"Location\";\r\n  dateHeader:string =\"Date\";\r\n\r\n  behavior$ = new BehaviorSubject<string>('');\r\n\r\n  length = 50;\r\n  pageSize = 25;\r\n  pageIndex = 0;\r\n  pageSizeOptions = [10, 25, 50, 100, 500, 1000];\r\n  hidePageSize = false;\r\n  showPageSizeOptions = true;\r\n  showFirstLastButtons = true;\r\n  disabled = false;\r\n\r\n  pageEvent:PageEvent;\r\n\r\n  isSpinner: boolean = true;\r\n\r\n  //selectedLang: string = (localStorage['selectedLang'] === undefined) ? \"en\" : localStorage['selectedLang'];\r\n  myLang:string = \"%20.%0A%20%20SERVICE%20wikibase%3Alabel%20%7B%20bd%3AserviceParam%20wikibase%3Alanguage%20%22\"+this.lang.selectedLang+\"%22%2C%22en%22.%20%7D%0A%7D%0A\";\r\n\r\n\r\n@ViewChild(MatSort)\r\nsort: MatSort;\r\n\r\n@ViewChild(\"paginator\")\r\n  paginator;\r\n\r\n  getHeaderLabel(column: string): string {\r\n    switch (column) {\r\n      case 'author': return this.authorHeader;\r\n      case 'title': return this.titleHeader;\r\n      case 'location': return this.locationHeader;\r\n      case 'date': return this.dateHeader;\r\n      default: return column;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.isSpinner = true; // Affiche le spinner\r\n    console.log('Spinner ON');\r\n\r\n    window.addEventListener('resize', () => {\r\n      this.isMobile = window.innerWidth <= 600;\r\n    });\r\n\r\n    this.dataSource.sortingDataAccessor = (data, sortHeaderId) =>\r\n      columnMapping[sortHeaderId]\r\n        ? columnMapping[sortHeaderId](data) || ''\r\n        : data[sortHeaderId] || '';\r\n\r\n    this.dataSource.sortData = (data, sort) => {   // pour tenir compte des accents et de la casse\r\n      const active = sort.active;\r\n      const direction = sort.direction;\r\n      if (!active || direction === '') {\r\n        return data;\r\n      }\r\n      return data.slice().sort((a, b) => {\r\n        const valueA = this.dataSource.sortingDataAccessor(a, active);\r\n        const valueB = this.dataSource.sortingDataAccessor(b, active);\r\n        // Utilise localeCompare pour un tri français insensible à la casse et aux accents\r\n        const comparison = (valueA as string).localeCompare(valueB as string, 'fr', { sensitivity: 'base' });\r\n        return direction === 'asc' ? comparison : -comparison;\r\n      });\r\n    };\r\n\r\n  this.biblioHU = this.lang.biblioHU(this.biblioHU);\r\n\r\n  this.authorHeader = this.lang.authorHeader(this.authorHeader);\r\n  this.titleHeader = this.lang.titleHeader(this.titleHeader);\r\n  this.locationHeader = this.lang.locationHeader(this.locationHeader);\r\n  this.dateHeader = this.lang.dateHeader(this.dateHeader);\r\n  \r\n  let u = this.database.sparqlBuilding(this.myLang);\r\n  let sparqlApiUrl = this.database.newSparqlAdress(u);\r\n\r\n  // Initialisation conditionnelle du cache\r\n  this.database.initBiblioData(sparqlApiUrl);\r\n\r\n  let dataService$ = this.database.getBiblioData(); // observable sur la donnée en cache\r\n\r\n\r\n    this.dataSource$ = combineLatest([this.behavior$, dataService$]).pipe(\r\n      map(res => {\r\n        this.dataSource.filter = res[0];\r\n        this.dataSource.data = res[1];\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n       return this.dataSource }));\r\n\r\n    this.dataSource$.subscribe(res => {\r\n      console.log('Spinner OFF');\r\n      this.isSpinner = false;\r\n    \r\n      // Force la détection pour que MatSort prenne en compte les nouvelles données\r\n    //  this.cdr.detectChanges();\r\n    });\r\n\r\n}\r\n\r\n\r\nonClick(query){ //handling click for downlooding the filtered data\r\n let u= query;\r\n u = this.database.databaseToDownload(query);\r\n let v= this.csv.arrayToCsv(u);\r\n this.csv.downloadBlob(v, \"biblio_harmonia_universalis\", \"text/csv;charset=utf-8;\")\r\n    }\r\n\r\napplyFilter(event) {\r\n const filterValue = event.target.value.trim().toLowerCase();\r\n this.dataSource.filter = filterValue;\r\n this.dataSource.filteredData;\r\n this.filtered = this.dataSource.filteredData[0].author.label\r\n}\r\n\r\nhandlePageEvent(e: PageEvent) {\r\n    this.pageEvent = e;\r\n    this.length = e.length;\r\n    this.pageSize = e.pageSize;\r\n    this.pageIndex = e.pageIndex;\r\n  }\r\n\r\nsetPageSizeOptions(setPageSizeOptionsInput: string) {\r\n    if (setPageSizeOptionsInput) {\r\n      this.pageSizeOptions = setPageSizeOptionsInput.split(',').map(str => +str);\r\n    }\r\n  }\r\n\r\nsetSort(column: string) {\r\n    if (this.sort.active === column) {\r\n      this.sort.direction = this.sort.direction === 'asc' ? 'desc' : 'asc';\r\n    } else {\r\n      this.sort.active = column;\r\n      this.sort.direction = 'asc';\r\n    }\r\n    this.sort.sortChange.emit({ active: this.sort.active, direction: this.sort.direction });\r\n  }\r\n\r\n}  \r\n", "<head>\n  <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\">\n</head>\n\n<body>\n  <div class=\"cardBackground\">\n    <div class=\"hu-header\">\n      <div class=\"hu-title\">\n        {{biblioHU}}\n      </div>\n      <div class=\"search-center\">\n        <a [routerLink]=\"['']\">Accueil</a>\n        <span>&nbsp;|&nbsp;</span>\n        <a [routerLink]=\"['/prosopography']\">Prosopography</a>\n        <span>&nbsp;|&nbsp;</span>\n        <a [routerLink]=\"['/search']\">FactGrid</a>\n      </div>\n    </div>\n  </div>\n\n  <mat-card appearance=\"outlined\" class=\"mat-elevation-z12\">\n    <mat-card-content class=\"cardBackground\">\n\n      <div class=\"labelTitlePadding\">\n        <mat-form-field appearance=\"outline\">\n          <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Search\">\n        </mat-form-field>\n      </div>\n\n      <div class=\"mobile-sort-buttons\" *ngIf=\"isMobile\">\n        <button *ngFor=\"let col of displayedColumns\"\n                mat-button\n                (click)=\"setSort(col)\"\n                [color]=\"sort?.active === col ? 'primary' : undefined\"\n                class=\"sort-btn\">\n          {{ getHeaderLabel(col) }}\n          <mat-icon *ngIf=\"sort?.active === col\">\n            {{ sort?.direction === 'asc' ? 'arrow_upward' : 'arrow_downward' }}\n          </mat-icon>\n        </button>\n      </div>\n\n      @if (isSpinner) {\n      <mat-progress-spinner mode=\"indeterminate\"\n                            color=\"primary\"\n                            diameter=\"50\"\n                            style=\"margin: 2rem auto; display: block;\">\n      </mat-progress-spinner>\n      }\n\n      @if (!isSpinner) {\n      <div class=\"mat-elevation-z8 container\">\n        <table mat-table class=\"mat-table\"\n               [dataSource]=\"dataSource\"\n               matSort\n               matSortActive=\"title\"\n               matSortDirection=\"asc\">\n\n          @for (column of displayedColumns; track column) {\n          <ng-container [matColumnDef]=\"column\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>\n              {{ getHeaderLabel(column) }}\n            </th>\n            <td mat-cell *matCellDef=\"let element\"\n                class=\"responsive-cell\"\n                [attr.data-label]=\"getHeaderLabel(column)\">\n              @switch (column) {\n              @case ('author') {\n              @if (element.author) {\n              {{ element.author.label }}\n              } @else {\n              <span class=\"text-muted\">[Inconnu]</span>\n              }\n              @if (element.author?.id) {\n              <button mat-icon-button\n                      class=\"compact-icon-btn\"\n                      [routerLink]=\"'/item/' + element.author.id\"\n                      matTooltip=\"Voir l'auteur dans la base de données\">\n                <mat-icon color=\"primary\" [inline]=\"true\" class=\"small-icon\">open_in_new</mat-icon>\n              </button>\n              }\n              }\n              @case ('title') {\n              <span>{{ element.title.label }}</span>\n              }\n              @case ('location') {\n              @if (element.location) {\n              {{ element.location.label }}\n              } @else {\n              <span class=\"text-muted\">[Inconnu]</span>\n              }\n              @if (element.location?.id) {\n              <button mat-icon-button\n                      class=\"compact-icon-btn\"\n                      [routerLink]=\"'/item/' + element.location.id\"\n                      matTooltip=\"Voir le lieu dans la base de données\">\n                <mat-icon color=\"primary\" [inline]=\"true\" class=\"small-icon\">open_in_new</mat-icon>\n              </button>\n              }\n              }\n              @case ('date') {\n              <span>{{ element.date.value }}</span>\n              }\n              @default {\n              <span>{{ element[column] }}</span>\n              }\n              }\n            </td>\n          </ng-container>\n          }\n\n          <tr mat-header-row class=\"mat-header-row\" *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n          <tr mat-row *matRowDef=\"let biblio; columns: displayedColumns\" class=\"responsive-row\"></tr>\n        </table>\n\n        <mat-paginator #paginator\n                       class=\"demo-paginator\"\n                       (page)=\"handlePageEvent($event)\"\n                       [length]=\"length\"\n                       [pageSize]=\"pageSize\"\n                       [disabled]=\"disabled\"\n                       [showFirstLastButtons]=\"showFirstLastButtons\"\n                       [pageSizeOptions]=\"showPageSizeOptions ? pageSizeOptions : []\"\n                       [hidePageSize]=\"hidePageSize\"\n                       [pageIndex]=\"pageIndex\"\n                       aria-label=\"Select page\">\n        </mat-paginator>\n      </div>\n      }\n\n      <div>\n        <span>\n          <button mat-icon-button color=\"primary\" class=\"internalLink\" #content (click)=\"onClick(this.dataSource.filteredData)\">\n            <mat-icon color=\"primary\" [inline]=\"true\">download</mat-icon>\n          </button>\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n        </span>\n      </div>\n\n    </mat-card-content>\n  </mat-card>\n</body>\n"],
  "mappings": "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",
  "names": []
}
