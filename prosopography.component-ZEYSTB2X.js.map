{
  "version": 3,
  "sources": ["src/app/prosopography/prosopography.component.ts", "src/app/prosopography/prosopography.component.html"],
  "sourcesContent": ["import { Component, OnInit, AfterViewInit, ViewChild, inject, ChangeDetectionStrategy } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { Observable, BehaviorSubject, combineLatest, map } from 'rxjs';\r\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\r\nimport { MatSort, MatSortModule } from '@angular/material/sort';\r\nimport { MatPaginator, MatPaginatorModule, PageEvent } from '@angular/material/paginator';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { ProsopoDatabaseService } from './prosopo-database.service';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { SelectedLangService } from '../selected-lang.service';\r\nimport { ArrayToCsvService } from '../services/array-to-csv.service';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\nexport interface Prosopo {\r\n  person: { label: string, description: string, id: string };\r\n  name: { label: string, id: string };\r\n  society: { label: string, id: string };\r\n}\r\n\r\nconst columnMapping = {\r\n  label: (data) => data.person?.label,\r\n  description: (data) => data.person?.description,\r\n  society: (data) => data.society?.label,\r\n  name: (data) => data.name?.label, // si besoin\r\n};\r\n\r\n@Component({\r\n  selector: 'app-prosopogra^phy',\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [MatCardModule, MatButtonModule, MatIconModule, MatTableModule, MatSelectModule, MatSortModule, MatProgressSpinnerModule, MatPaginatorModule, MatInputModule, RouterModule],\r\n  templateUrl: './prosopography.component.html',\r\n  styleUrl: './prosopography.component.scss'\r\n})\r\nexport class ProsopographyComponent implements OnInit, AfterViewInit {\r\n\r\n  private database = inject(ProsopoDatabaseService);\r\n  private lang = inject(SelectedLangService);\r\n  private csv = inject(ArrayToCsvService);\r\n\r\n  prosopography: string = \"Prosopography Harmonia Universalis\";\r\n\r\n  displayedColumns: string[] = ['label', 'description'];\r\n  dataSource = new MatTableDataSource<Prosopo>();\r\n  dataSource$: Observable<any>;\r\n\r\n  behavior$ = new BehaviorSubject<string>('');\r\n\r\n  length = 50;\r\n  pageSize = 25;\r\n  pageIndex = 0;\r\n  pageSizeOptions = [10, 25, 50, 100, 500, 1000];\r\n  hidePageSize = false;\r\n  showPageSizeOptions = true;\r\n  showFirstLastButtons = true;\r\n  disabled = false;\r\n\r\n  pageEvent: PageEvent;\r\n\r\n  generalFilter: string = '';\r\n  nameFilter: string = '';\r\n  societyFilter: string = '';\r\n\r\n  isMobile = window.innerWidth <= 600;\r\n\r\n  societyOptions: string[] = [];\r\n  selectedSociety: string = '';\r\n\r\n\r\n\r\n  isSpinner: boolean = true;\r\n\r\n  //selectedLang: string = (localStorage['selectedLang'] === undefined) ? \"en\" : localStorage['selectedLang'];\r\n  myLang: string = \"%20.%0A%20%20SERVICE%20wikibase%3Alabel%20%7B%20bd%3AserviceParam%20wikibase%3Alanguage%20%22\" + this.lang.selectedLang + \"%22%2C%22en%22.%20%7D%0A%7D%0A\";\r\n\r\n  getHeaderLabel(column: string): string {\r\n    switch (column) {\r\n      case 'label': return 'Nom';\r\n      case 'description': return 'Description';\r\n      case 'society': return 'Société';\r\n      default: return column;\r\n    }\r\n  }\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  ngOnInit() {\r\n\r\n    window.addEventListener('resize', () => {\r\n      this.isMobile = window.innerWidth <= 600;\r\n    });\r\n\r\n    this.dataSource.filterPredicate = (data: Prosopo, filter: string) => {\r\n      const parsed = JSON.parse(filter);\r\n      const general = parsed.general;\r\n      const name = parsed.name;\r\n      const society = parsed.society;\r\n\r\n      const generalMatch =\r\n        (data.person?.label?.toLowerCase().includes(general) ?? false) ||\r\n        (data.person?.description?.toLowerCase().includes(general) ?? false);\r\n\r\n      const nameMatch = data.name?.label\r\n        ? data.name.label.toLowerCase().includes(name)\r\n        : false;\r\n\r\n      const societyMatch = !society || data.society?.label === society;\r\n\r\n      return generalMatch && (name === '' || nameMatch) && societyMatch;\r\n    };\r\n\r\n    \r\n\r\n    this.dataSource.sortingDataAccessor = (data, sortHeaderId) =>\r\n      columnMapping[sortHeaderId]\r\n        ? columnMapping[sortHeaderId](data) || ''\r\n        : (typeof data[sortHeaderId] === 'string' ? data[sortHeaderId] : '');\r\n\r\n\r\n    this.dataSource.sortData = (data, sort) => {   // pour tenir compte des accents et de la casse\r\n      const active = sort.active;\r\n      const direction = sort.direction;\r\n      if (!active || direction === '') {\r\n        return data;\r\n      }\r\n      return data.slice().sort((a, b) => {\r\n        const valueA = this.dataSource.sortingDataAccessor(a, active);\r\n        const valueB = this.dataSource.sortingDataAccessor(b, active);\r\n        // Utilise localeCompare pour un tri français insensible à la casse et aux accents\r\n        const comparison = (valueA as string).localeCompare(valueB as string, 'fr', { sensitivity: 'base' });\r\n        return direction === 'asc' ? comparison : -comparison;\r\n      });\r\n    };\r\n\r\n    let u = this.database.sparqlBuilding(this.myLang);\r\n    let sparqlApiUrl = this.database.newSparqlAdress(u);\r\n\r\n\r\n    // Initialisation conditionnelle du cache\r\n    this.database.initProsopoData(sparqlApiUrl);\r\n\r\n    let dataService$ = this.database.getProsopoData(); // observable sur la donnée en cache\r\n\r\n    this.dataSource$ = combineLatest([this.behavior$, dataService$]).pipe(\r\n      map(res => {\r\n        this.dataSource.filter = res[0];\r\n        this.dataSource.data = res[1];\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n        console.log(this.dataSource.data);\r\n        return this.dataSource\r\n      }));\r\n\r\n    this.dataSource$.subscribe(res => {\r\n      this.isSpinner = false;\r\n      // Extraction des labels uniques de société\r\n      this.societyOptions = Array.from(\r\n        new Set(this.dataSource.data\r\n          .map((item: Prosopo) => item.society?.label)\r\n          .filter(label => !!label))\r\n      );\r\n    });\r\n\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  onClick(query) { //handling click for downlooding the filtered data\r\n    let u = query;\r\n    u = this.database.databaseToDownload(query);\r\n    let v = this.csv.arrayToCsv(u);\r\n    this.csv.downloadBlob(v, \"_prosopo_harmonia_universalis\", \"text/csv;charset=utf-8;\")\r\n  }\r\n\r\n\r\n  applyGeneralFilter(event: Event) {\r\n    this.generalFilter = (event.target as HTMLInputElement).value.trim().toLowerCase();\r\n    this.applyCombinedFilter();\r\n  }\r\n\r\n  applyNameFilter(event: Event) {\r\n    this.nameFilter = (event.target as HTMLInputElement).value.trim().toLowerCase();\r\n    this.applyCombinedFilter();\r\n  }\r\n\r\n  applyCombinedFilter() {\r\n    this.dataSource.filter = JSON.stringify({\r\n      general: this.generalFilter,\r\n      name: this.nameFilter,\r\n      society: this.societyFilter\r\n    });\r\n  }\r\n\r\n  applySocietyFilter(value: string) {\r\n    this.societyFilter = value;\r\n    this.applyCombinedFilter();\r\n  }\r\n\r\n  handlePageEvent(e: PageEvent) {\r\n    this.pageEvent = e;\r\n    this.length = e.length;\r\n    this.pageSize = e.pageSize;\r\n    this.pageIndex = e.pageIndex;\r\n  }\r\n\r\n  setSort(column: string) {\r\n    if (this.sort.active === column) {\r\n      this.sort.direction = this.sort.direction === 'asc' ? 'desc' : 'asc';\r\n    } else {\r\n      this.sort.active = column;\r\n      this.sort.direction = 'asc';\r\n    }\r\n    this.sort.sortChange.emit({ active: this.sort.active, direction: this.sort.direction });\r\n  }\r\n}\r\n\r\n", "<body>\n  <div class=\"cardBackground\">\n    <div class=\"prosopo-header\">\n      <div class=\"prosopo-title\">\n        {{prosopography}}\n      </div>\n      <div class=\"search-center\">\n        <a [routerLink]=\"['']\">Accueil</a>\n        <span>&nbsp;|&nbsp;</span>\n        <a [routerLink]=\"['/harmonia_universalis']\">Bibliography</a>\n        <span>&nbsp;|&nbsp;</span>\n        <a [routerLink]=\"['/search']\">FactGrid</a>\n      </div>\n    </div>\n  </div>\n\n  <mat-card appearance=\"outlined\" class=\"mat-elevation-z12\">\n    <mat-card-content class=\"cardBackground\">\n\n      <div class=\"labelTitlePadding filter-bar\">\n        <div class=\"filter-left\">\n          <mat-form-field appearance=\"outline\">\n            <input matInput (keyup)=\"applyGeneralFilter($event)\" placeholder=\"Recherchez\">\n          </mat-form-field>\n        </div>\n        <div class=\"filter-right\">\n          <mat-form-field appearance=\"outline\">\n            <input matInput (keyup)=\"applyNameFilter($event)\" placeholder=\"Filtrez par nom\">\n          </mat-form-field>\n          <mat-form-field appearance=\"outline\">\n            <mat-select placeholder=\"Filtrez par société\" (selectionChange)=\"applySocietyFilter($event.value)\">\n              <mat-option value=\"\">Aucun filtre de Société</mat-option>\n              @for (soc of societyOptions; track soc) {\n              <mat-option [value]=\"soc\" class=\"styling-option\">{{ soc }}</mat-option>\n              }\n            </mat-select>\n          </mat-form-field>\n        </div>\n        <div>\n          {{ dataSource.filteredData.length }} items\n        </div>\n      </div>\n\n      @if (isMobile) {\n      <div class=\"mobile-sort-buttons\">\n        @for (col of displayedColumns; track col) {\n        @if (col === 'label') {\n        <button mat-button\n                (click)=\"setSort(col)\"\n                [color]=\"sort?.active === col ? 'primary' : ''\"\n                class=\"sort-btn\">\n          {{ getHeaderLabel(col) }}\n          @if (sort?.active === col) {\n          <mat-icon>\n            {{ sort?.direction === 'asc' ? 'arrow_upward' : 'arrow_downward' }}\n          </mat-icon>\n          }\n        </button>\n        }\n        }\n      </div>\n      }\n\n\n      @if (isSpinner) {\n      <mat-progress-spinner mode=\"indeterminate\"\n                            color=\"primary\"\n                            diameter=\"50\"\n                            style=\"margin: 2rem auto; display: block;\">\n      </mat-progress-spinner>\n      }\n\n      @if (!isSpinner) {\n      <div class=\"mat-elevation-z8 container\">\n        <table mat-table class=\"mat-table\"\n               [dataSource]=\"dataSource\"\n               matSort\n               matSortActive=\"label\"\n               matSortDirection=\"asc\">\n\n          @for (column of displayedColumns; track column) {\n          <ng-container [matColumnDef]=\"column\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>\n              {{ getHeaderLabel(column) }}\n            </th>\n            <td mat-cell *matCellDef=\"let element\"\n                class=\"responsive-cell\"\n                [attr.data-label]=\"getHeaderLabel(column)\">\n              @switch (column) {\n              @case ('label') {\n              @if (element.person) {\n              <span class=\"label-with-icon\">\n                <span>{{ element.person.label }}</span>\n                @if (element.person.id) {\n                <button mat-icon-button\n                        class=\"compact-icon-btn\"\n                        [routerLink]=\"'/item/' + element.person.id\"\n                        matTooltip=\"Voir la personne dans la base de données\">\n                  <mat-icon color=\"primary\" [inline]=\"true\" class=\"small-icon\">open_in_new</mat-icon>\n                </button>\n                }\n              </span>\n              } @else {\n              <span class=\"text-muted\">[Inconnu]</span>\n              }\n              }\n              @case ('description') {\n              @if (element.person) {\n              {{ element.person.description }}\n              } @else {\n              <span class=\"text-muted\">[Aucune]</span>\n              }\n              }\n              @case ('society') {\n              @if (element.society) {\n              <span>\n                {{ element.society.label }}\n                @if (element.society.id) {\n                <button mat-icon-button\n                        class=\"compact-icon-btn\"\n                        [routerLink]=\"'/item/' + element.society.id\"\n                        matTooltip=\"Voir la société dans la base de données\">\n                  <mat-icon color=\"primary\" [inline]=\"true\" class=\"small-icon\">open_in_new</mat-icon>\n                </button>\n                }\n              </span>\n              } @else {\n              <span class=\"text-muted\">[Aucune]</span>\n              }\n              }\n              @default {\n              <span>{{ element[column] }}</span>\n              }\n              }\n            </td>\n          </ng-container>\n          }\n\n          <tr mat-header-row class=\"mat-header-row\" *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns\" class=\"responsive-row\"></tr>\n        </table>\n\n        <mat-paginator #paginator\n                       class=\"demo-paginator\"\n                       (page)=\"handlePageEvent($event)\"\n                       [length]=\"length\"\n                       [pageSize]=\"pageSize\"\n                       [disabled]=\"disabled\"\n                       [showFirstLastButtons]=\"showFirstLastButtons\"\n                       [pageSizeOptions]=\"showPageSizeOptions ? pageSizeOptions : []\"\n                       [hidePageSize]=\"hidePageSize\"\n                       [pageIndex]=\"pageIndex\"\n                       aria-label=\"Select page\">\n        </mat-paginator>\n      </div>\n      }\n\n      <div>\n        <span>\n          <button mat-icon-button color=\"primary\" class=\"internalLink\" #content (click)=\"onClick(this.dataSource.filteredData)\">\n            <mat-icon color=\"primary\" [inline]=\"true\">download</mat-icon>\n          </button>\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n        </span>\n      </div>\n\n    </mat-card-content>\n  </mat-card>\n</body>\n\n"],
  "mappings": "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",
  "names": []
}
